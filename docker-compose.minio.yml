version: '3.8'

services:
  # BEGIN minio_frontend
  minio_frontend:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    container_name: minio_frontend
    restart: always
    command: server /data  --console-address ":9000" --address ":9001"
    volumes:
      - ${s3_data_dir:-./s3_data}:/data
    env_file:
      - ./.minio.env
    labels:
      # Enable Traefik for this specific "minio_frontend" service
      - traefik.enable=true
      # Use the traefik-network network (defined in docker.compose.traefik.yml)
      - traefik.docker.network=traefik-network
      # https-redirect middleware to redirect HTTP to HTTPS
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
      # Make Traefik use this domain in HTTP
      - traefik.http.routers.minio.entrypoints=http
      - traefik.http.routers.minio.rule=Host(`${minio_url}`)
      # Make Traefik use this domain in HTTPS
      - traefik.http.routers.minio-https.entrypoints=https
      - traefik.http.routers.minio-https.rule=Host(`${minio_url}`)
      - traefik.http.routers.minio-https.tls=true
      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.minio-https.tls.certresolver=le
      # Plug middleware to redirect HTTP to HTTPS
      - traefik.http.routers.minio.middlewares=https-redirect
      # Define the port inside the Docker service to use
      - traefik.http.services.minio.loadbalancer.server.port=9000

    networks:
      - app-network
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-network
  # END minio_frontend
  # BEGIN minio_backend
  minio_backend:
    image: minio/minio:RELEASE.2024-01-16T16-07-38Z
    container_name: minio_backend
    restart: always
    command: server /data  --console-address ":9001" --address ":9000"
    volumes:
      - ${s3_data_dir:-./s3_data}:/data
    env_file:
      - ./.minio.env
    labels:
      # Enable Traefik for this specific "minio_backend" service
      - traefik.enable=true
      # Use the traefik-network network (defined in docker.compose.traefik.yml)
      - traefik.docker.network=traefik-network
      # https-redirect middleware to redirect HTTP to HTTPS
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
       # Make Traefik use this domain in HTTP
      - traefik.http.routers.minio-admin.entrypoints=http
      - traefik.http.routers.minio-admin.rule=Host(`${admin_minio_url}`)
       # Make Traefik use this domain in HTTPS
      - traefik.http.routers.minio-admin-https.entrypoints=https
      - traefik.http.routers.minio-admin-https.rule=Host(`${admin_minio_url}`)
      - traefik.http.routers.minio-admin-https.tls=true
      # Use the "le" (Let's Encrypt) resolver
      - traefik.http.routers.minio-admin-https.tls.certresolver=le
      # https-redirect middleware creation to redirect HTTP to HTTPS
      - traefik.http.routers.minio-admin.middlewares=https-redirect
      # Define the port inside the Docker service to use
      - traefik.http.services.minio-admin.loadbalancer.server.port=9000
    networks:
      - app-network
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-network
  # END minio_backend

networks:
  app-network:
    external: true
  traefik-network:
    external: true